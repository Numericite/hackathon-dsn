input {
  jdbc {
    # Database connection details
    jdbc_driver_library => "/Users/horek/Documents/numericite/hackathon/postgresql-42.7.3.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://10.0.0.1:5432/dsn"
    jdbc_user => "xxx"
    jdbc_password => "xxx"

    # SQL query to fetch data
    statement => "select distinct on (arr_m.id)
  date_dernier_jour_travaille :: date, 
  date_dernier_jour_travaille :: date + (
    case when extract (
      DOW 
      from 
        date_dernier_jour_travaille :: date
    ) = 6 then 2 when extract (
      DOW 
      from 
        date_dernier_jour_travaille :: date
    ) = 5 then 3 else 1 end
  ) as date_de_debut, 
  date_part(
    'year', 
    AGE(
      to_date (date_naissance, 'DDMMYYYY')
    )
  ) individu_age_annee, 
  arr_m.date_reprise as date_fin, 
  arr_m.mois_declaration,
  case individu.sexe when 'H' then 'Homme' when 'F' then 'Femme' else null end as individu_sexe, 
  individu.date_naissance as individu_date_naissance, 
  CAST(individu.id as varchar) as individu_id,
  entreprise.siret as entreprise_id, 
  entreprise.en_code_apen as entreprise_ape, 
	entreprise.en_effectif_moyen as entreprise_effectif_moyen,
  entreprise.et_code_apet as etablissement_ape, 
  CAST(contrat.id as varchar) as contrat_id,
  case contrat.nature_contrat when '01' then 'CDI' when '02' then 'CDD' else 'Autre' end as contrat_type, 
  case contrat.modalite_temps when '10' then 'Temps
plein' when '20' then 'Temps
partiel' end as contrat_modalite_temps, 
  contrat.date_debut_contrat as contrat_date_debut, 
  case contrat.date_fin_contrat when '2999-12-31
00:00:00.000' then null else contrat.date_fin_contrat end as contrat_date_fin, 
  case contrat.statut_rc when '01' then 'Cadre' when '04' then 'Non
cadre' else 'Autre' end as contrat_cadre, 
case SUBSTRING(contrat.pcs_ese, 1, 2)
    when '11' THEN 'Agriculteurs sur petite exploitation'
    when '12' THEN 'Agriculteurs sur moyenne exploitation'
    when '13' THEN 'Agriculteurs sur grande exploitation'
    when '21' THEN 'Artisans'
    when '22' THEN 'Commerçants et assimilés'
    when '23' THEN 'Chefs d''entreprise de 10 salariés ou plus'
    when '31' THEN 'Professions libérales'
    when '33' THEN 'Cadres de la fonction publique'
    when '34' THEN 'Professeurs, professions scientifiques'
    when '35' THEN 'Professions de l''information, des arts et des spectacles'
    when '37' THEN 'Cadres administratifs et commerciaux d''entreprise'
    when '38' THEN 'Ingénieurs et cadres techniques d''entreprise'
    when '42' THEN 'Professeurs des écoles, instituteurs et assimilés'
    when '43' THEN 'Professions intermédiaires de la santé et du travail social'
    when '44' THEN 'Clergé, religieux'
    when '45' THEN 'Professions intermédiaires administratives de la fonction publique'
    when '46' THEN 'Professions intermédiaires administratives et commerciales des entreprises'
    when '47' THEN 'Techniciens'
    when '48' THEN 'Contremaîtres, agents de maîtrise'
    when '52' THEN 'Employés civils et agents de service de la fonction publique'
    when '53' THEN 'Policiers et militaires'
    when '54' THEN 'Employés administratifs d''entreprise'
    when '55' THEN 'Employés de commerce'
    when '56' THEN 'Personnels des services directs aux particuliers'
    when '62' THEN 'Ouvriers qualifiés de type industriel'
    when '63' THEN 'Ouvriers qualifiés de type artisanal'
    when '64' THEN 'Chauffeurs'
    when '65' THEN 'Ouvriers qualifiés de la manutention, du magasinage et du transport'
    when '67' THEN 'Ouvriers non qualifiés de type industriel'
    when '68' THEN 'Ouvriers non qualifiés de type artisanal'
    when '69' THEN 'Ouvriers agricoles'
    when '71' THEN 'Anciens agriculteurs exploitants'
    when '72' THEN 'Anciens artisans, commerçants, chefs d''entreprise'
    when '74' THEN 'Anciens cadres'
    when '75' THEN 'Anciennes professions intermédiaires'
    when '77' THEN 'Anciens employés'
    when '78' THEN 'Anciens ouvriers'
    when '81' THEN 'Chômeurs n''ayant jamais travaillé'
    when '83' THEN 'Militaires du contingent'
    when '84' THEN 'Elèves, étudiants'
    when '85' THEN 'Personnes diverses sans activité professionnelle de moins de 60 ans (sauf retraités)'
    when '86' THEN 'Personnes diverses sans activité professionnelle de 60 ans et plus (sauf retraités)'
    ELSE 'Autre'
  end as categorie_sp,
  case arr_m.motif_arret when '01' then 'Maladie' when '02' then 'Maternité' when '03' then 'Faternité
accueil de l_enfant' when '04' then 'Congé
suite à un accident de trajet' when '05' then 'Congé
suite à maladie professionnelle' when '06' then 'Congé
suite à accident de travail ou de service' when '07' then 'Femme
enceinte dispensée de travail' when '09' then 'Adoption' when '10' then 'Congé
suite à une maladie imputable au service' when '11' then 'Congé
de maladie des victimes ou réformés de guerre (art 41)' when '12' then 'Congé
de longue durée' when '13' then 'Congé
de longue maladie' when '14' then 'Congé
pour invalidité temporaire imputable au service' when '15' then 'Temps
partiel thérapeutique (risque maladie)' when '16' then 'Temps
partiel thérapeutique (risque accident de travail)' when '17' then 'Temps
partiel thérapeutique (risque accident de trajet)' when '18' then 'Temps
partiel thérapeutique (risque maladie professionnelle)' else 'Autre' end as motif_arret 
from 
  dadeh.ddadtarret_trav arr_m 
  left join public.ddadtcontrat contrat on contrat.id = arr_m.id_contrat 
  left join dadeh.ddadtemployeur_assure helper on helper.id = contrat.id_employeur_assure 
  left join dadeh.ddadtassure individu on helper.id_assure = individu.id 
  left join dadeh.ddadtemployeur entreprise on helper.id_employeur = entreprise.id 
where 
  helper.id_employeur in (
    SELECT helper.id_employeur
    FROM dadeh.ddadtrem_brute_ss sb
    LEFT JOIN dadeh.ddadtversement v ON v.id = sb.id_versement
    LEFT JOIN dadeh.ddadtemployeur_assure helper ON v.id_employeur_assure = helper.id
    LEFT JOIN dadeh.ddadtcontrat_employeur helper2 ON helper2.id_employeur_assure = helper.id
    LEFT JOIN public.ddadtcontrat contrat ON helper2.id_contrat = contrat.id
    LEFT JOIN dadeh.ddadtassure individu ON helper.id_assure = individu.id
    LEFT JOIN dadeh.ddadtemployeur entreprise ON helper.id_employeur = entreprise.id
    WHERE entreprise.en_effectif_moyen > 30 AND entreprise.en_effectif_moyen < 60
    AND contrat.modalite_temps IN ('10', '20')
    GROUP BY helper.id_employeur
    ORDER BY COUNT(*) DESC
    LIMIT 100
  )
  order by arr_m.id"
  }
}

filter {
  # Add any filters here if needed, for example, to process or transform the data
}

output {
  elasticsearch {
    hosts => ["https://localhost:9200"]
    index => "dns_arrets"
    user => "xxx"
    password => "xxx"
    ssl => true
    ssl_certificate_verification => false
  }

  # Optional: Output to stdout for debugging purposes
  stdout {
    codec => rubydebug
  }
}

