input {
  jdbc {
    # Database connection details
    jdbc_driver_library => "/Users/horek/Documents/numericite/hackathon/postgresql-42.7.3.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://10.0.0.1:5432/dsn"
    jdbc_user => "xxx"
    jdbc_password => "xxx"

    # SQL query to fetch data
    statement => "select 
	sp.montant as montant,
  v.mois_declaration,
	'prime' as kind, 
	case individu.sexe
		WHEN 'H' then 'Homme'
		when 'F' then 'Femme'
		else NULL
	end as individu_sexe,
	individu.date_naissance as individu_date_naissance, 
	CAST(individu.id as varchar) as individu_id,
	entreprise.siret as entreprise_id,
	entreprise.en_code_apen as entreprise_ape,
	entreprise.et_code_apet as etablissement_ape,
	CAST(contrat.id as varchar) as contrat_id,
	case contrat.nature_contrat
		WHEN '01' then 'CDI'
		when '02' then 'CDD'
		else 'Autre'
	end as contrat_type,
	case contrat.modalite_temps 
		when '10' then 'Temps plein'
		when '20' then 'Temps partiel'
	end as contrat_modalite_temps,
	contrat.date_debut_contrat as contrat_date_debut,
	case contrat.date_fin_contrat 
		when '2999-12-31 00:00:00.000' then null
		else contrat.date_fin_contrat 
	end as contrat_date_fin,
	case contrat.statut_rc 
		when '01' then 'Cadre'
		when '04' then 'Non cadre'
		else 'Autre'
	end as contrat_cadre,
  case SUBSTRING(contrat.pcs_ese, 1, 2)
    when '11' THEN 'Agriculteurs sur petite exploitation'
    when '12' THEN 'Agriculteurs sur moyenne exploitation'
    when '13' THEN 'Agriculteurs sur grande exploitation'
    when '21' THEN 'Artisans'
    when '22' THEN 'Commerçants et assimilés'
    when '23' THEN 'Chefs d''entreprise de 10 salariés ou plus'
    when '31' THEN 'Professions libérales'
    when '33' THEN 'Cadres de la fonction publique'
    when '34' THEN 'Professeurs, professions scientifiques'
    when '35' THEN 'Professions de l''information, des arts et des spectacles'
    when '37' THEN 'Cadres administratifs et commerciaux d''entreprise'
    when '38' THEN 'Ingénieurs et cadres techniques d''entreprise'
    when '42' THEN 'Professeurs des écoles, instituteurs et assimilés'
    when '43' THEN 'Professions intermédiaires de la santé et du travail social'
    when '44' THEN 'Clergé, religieux'
    when '45' THEN 'Professions intermédiaires administratives de la fonction publique'
    when '46' THEN 'Professions intermédiaires administratives et commerciales des entreprises'
    when '47' THEN 'Techniciens'
    when '48' THEN 'Contremaîtres, agents de maîtrise'
    when '52' THEN 'Employés civils et agents de service de la fonction publique'
    when '53' THEN 'Policiers et militaires'
    when '54' THEN 'Employés administratifs d''entreprise'
    when '55' THEN 'Employés de commerce'
    when '56' THEN 'Personnels des services directs aux particuliers'
    when '62' THEN 'Ouvriers qualifiés de type industriel'
    when '63' THEN 'Ouvriers qualifiés de type artisanal'
    when '64' THEN 'Chauffeurs'
    when '65' THEN 'Ouvriers qualifiés de la manutention, du magasinage et du transport'
    when '67' THEN 'Ouvriers non qualifiés de type industriel'
    when '68' THEN 'Ouvriers non qualifiés de type artisanal'
    when '69' THEN 'Ouvriers agricoles'
    when '71' THEN 'Anciens agriculteurs exploitants'
    when '72' THEN 'Anciens artisans, commerçants, chefs d''entreprise'
    when '74' THEN 'Anciens cadres'
    when '75' THEN 'Anciennes professions intermédiaires'
    when '77' THEN 'Anciens employés'
    when '78' THEN 'Anciens ouvriers'
    when '81' THEN 'Chômeurs n''ayant jamais travaillé'
    when '83' THEN 'Militaires du contingent'
    when '84' THEN 'Elèves, étudiants'
    when '85' THEN 'Personnes diverses sans activité professionnelle de moins de 60 ans (sauf retraités)'
    when '86' THEN 'Personnes diverses sans activité professionnelle de 60 ans et plus (sauf retraités)'
    ELSE 'Autre'
  end as categorie_sp,
case sp.type
    WHEN '001' THEN 'Indemnité spécifique de rupture conventionnelle'
    WHEN '002' THEN 'Indemnité versée à l''occasion de la cessation forcée des fonctions des mandataires sociaux'
    WHEN '003' THEN 'Indemnité légale de mise à la retraite par l''employeur'
    WHEN '004' THEN 'Indemnité conventionnelle de mise à la retraite par l''employeur'
    WHEN '005' THEN 'Indemnité légale de départ à la retraite du salarié'
    WHEN '006' THEN 'Indemnité conventionnelle de départ à la retraite du salarié'
    WHEN '007' THEN 'Indemnité légale de licenciement'
    WHEN '008' THEN 'Indemnité légale supplémentaire de licenciement'
    WHEN '009' THEN 'Indemnité légale spéciale de licenciement'
    WHEN '010' THEN 'Indemnité légale spécifique de licenciement'
    WHEN '011' THEN 'Indemnité légale de fin de CDD'
    WHEN '012' THEN 'Indemnité légale de fin de mission'
    WHEN '013' THEN 'Indemnité légale due aux journalistes'
    WHEN '014' THEN 'Indemnité légale de clientèle'
    WHEN '015' THEN 'Indemnité légale due au personnel naviguant de l''aviation civile'
    WHEN '016' THEN 'Indemnité légale versée à l''apprenti'
    WHEN '017' THEN 'Dommages et intérêts dus à la non remise du contrat ou dus à un CDD ou à une rupture de période d’essai (délai de prévenance)'
    WHEN '018' THEN 'Indemnité due en raison d''un sinistre'
    WHEN '019' THEN 'Indemnité suite à clause de non concurrence'
    WHEN '020' THEN 'Indemnité compensatrice de congés payés'
    WHEN '021' THEN 'Indemnité conventionnelle (supplémentaire aux indemnités légales)'
    WHEN '022' THEN 'Indemnité transactionnelle'
    WHEN '023' THEN 'Indemnité compensatrice de préavis payé non effectué'
    WHEN '025' THEN 'Indemnité compensatrice des droits acquis dans le cadre d’un compte épargne temps'
    WHEN '026' THEN 'Prime exceptionnelle liée à l''activité avec période de rattachement spécifique'
    WHEN '027' THEN 'Prime liée à l''activité avec période de rattachement spécifique'
    WHEN '028' THEN 'Prime non liée à l''activité'
    WHEN '029' THEN 'Prime liée au rachat des jours de RTT avec période de rattachement spécifique'
    WHEN '030' THEN 'Prime rachat CET'
    WHEN '032' THEN 'Indemnité compensatrice de préavis pour inaptitude suite AT ou Maladie Professionnelle'
    WHEN '033' THEN 'Indemnité forfaitaire de conciliation prud’homale'
    WHEN '034' THEN 'Indemnité de congés payés (art. D. 3141-32 et D. 3141-33 du Code du travail)'
    WHEN '039' THEN 'Complément de rémunération à la charge de l''Etat'
    WHEN '040' THEN '[FP] Indemnité mensuelle de technicité'
    WHEN '041' THEN '[FP] Indemnité de sujétions spéciales'
    WHEN '042' THEN '[FP] Indemnité de risque'
    WHEN '043' THEN '[FP] Prime de sujétions spéciales'
    WHEN '044' THEN '[FP] Indemnité de sujétion spécifique'
    WHEN '045' THEN 'Dommages et intérêts à la non remise du contrat de mission'
    WHEN '046' THEN 'Indemnité de congés payés (art. L. 3141-24 du Code du travail)'
    WHEN '047' THEN '[FP] GIPA - Garantie individuelle du pouvoir d''achat'
    WHEN '048' THEN '[FP] Indemnité de résidence'
    WHEN '049' THEN '[FP] Supplément familial de traitement'
    WHEN '050' THEN '[FP] RIFSEEP IFSE'
    WHEN '051' THEN '[FP] RIFSEEP CIA'
    WHEN '900' THEN 'Indemnité d''expatriation'
    WHEN '901' THEN 'Indemnité d''impatriation'
    WHEN '902' THEN 'Potentiel nouveau type de prime exceptionnelle de pouvoir d''achat (PEPA)'
    WHEN '903' THEN 'Potentiel nouveau type de prime A'
    WHEN '904' THEN 'Potentiel nouveau type de prime B'
    ELSE 'Autre'
end as type_prime
from dadeh.ddadtprime sp
left join dadeh.ddadtversement v on v.id = sp.id_versement 
left join dadeh.ddadtemployeur_assure helper on v.id_employeur_assure = helper.id
left join dadeh.ddadtcontrat_employeur helper2 on helper2.id_employeur_assure = helper.id 
left join public.ddadtcontrat contrat on helper2.id_contrat = contrat.id
left join dadeh.ddadtassure individu on helper.id_assure = individu.id
left join dadeh.ddadtemployeur entreprise on helper.id_employeur = entreprise.id
where helper.id_employeur in (
 select id from dadeh.ddadtemployeur d where d.en_effectif_moyen > 30 and d.en_effectif_moyen < 60 limit 1000
)
and contrat.modalite_temps in ('10', '20')"
  }
}

filter {
  # Add any filters here if needed, for example, to process or transform the data
}

output {
  elasticsearch {
    hosts => ["https://localhost:9200"]
    index => "dns_versement"
    user => "xxx"
    password => "xxx"
    ssl => true
    ssl_certificate_verification => false
  }

  # Optional: Output to stdout for debugging purposes
  stdout {
    codec => rubydebug
  }
}

